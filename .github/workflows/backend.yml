name: backend-cd

on:
  push:
    branches: [ main ]
    paths:
      - "backend/**"

env:
  REGISTRY: ghcr.io

jobs:
  build-backend:
    name: build-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: convert github repository name to lowercase
        run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Package
        working-directory: ./backend
        run: mvn package -Dmaven.test.skip

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        

      - name: get docker version tag
        id: image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=$(echo ${{ github.sha }} | cut -c1-8)
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/src/main/docker/Dockerfile.jvm
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}-api:latest, ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}-api:${{ steps.image.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
    
      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@main
        with:
          valueFile: 'deployment/helm/values.yaml'
          propertyPath: 'backend.image.tag'
          value: ${{ steps.image.outputs.version }}
          branch: main
          #targetBranch: development
          #createPR: true
          message: 'Update Image Version to ${{ steps.image.outputs.version }}'