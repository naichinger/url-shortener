name: cd

on:
  push:
    branches: [ main ]
    paths-ignore:
      - "deployment/**"

env:
  REGISTRY: ghcr.io

jobs:
  build-backend:
    name: build-backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: convert github repository name to lowercase
        run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: Package
        working-directory: ./backend
        run: mvn package -Dmaven.test.skip

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/src/main/docker/Dockerfile.jvm
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend:
    name: build-frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: convert github repository name to lowercase
        run: echo "IMAGE_REPOSITORY=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max